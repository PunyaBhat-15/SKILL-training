1. static data
#include <stdio.h>
void countVotes(int votes[],int n,int candidateVotes[]){
    for(int i=0;i<n;i++){
        candidateVotes[votes[i]-1]++;
    }
}
int findwinner(int candidateVotes[]){
    int max=0;
    for(int i=0;i<5;i++){
        if(candidateVotes[i]>candidateVotes[max]){
            max=i;
        }
        
    }
    return max+1;
}

int main()
{
    int votes[]={4,2,2,3,1,4,2,5,4,4};
    int n=10;
    int candidateVotes[5]={0,0,0,0,0 };
    countVotes(votes,n,candidateVotes);
    for(int i=0;i<5;i++){
        printf("candidate %d votes are %d\n",i+1,candidateVotes[i]);
    }
    printf("winner is %d candidate",findwinner(candidateVotes));
    return 0;
}
2. user data:
#include <stdio.h>
void countVotes(int votes[],int n,int candidateVotes[]) {
	for(int i=0; i<n; i++) {
		candidateVotes[votes[i]-1]++;
	}
}
int findwinner(int candidateVotes[]) {
	int max=0;
	for(int i=0; i<5; i++) {
		if(candidateVotes[i]>candidateVotes[max]) {
			max=i;
		}

	}
	return max+1;
}
void readvotes(int votes[],int n){
    for(int i=0;i<n;i++){
        printf("1.Candidate 1\n2. Candidate 2\n3. Candidate 3\n4. Candidate 4\n5. Candidadate 5\n");
        scanf("%d",&votes[i]);
    }
}

int main()
{
	int votes[200];
	int n;
	printf("enter the number of votes: ");
	scanf("%d",&n);
	readvotes(votes,n);
	int candidateVotes[5]= {0,0,0,0,0 };
	countVotes(votes,n,candidateVotes);
	for(int i=0; i<5; i++) {
		printf("candidate %d votes are %d\n",i+1,candidateVotes[i]);
	}
	printf("winner is %d candidate",findwinner(candidateVotes));
	return 0;
}
3. using dynamic memoery allocation
#include<stdio.h>
#include<stdlib.h>
void countVotes(int votes[],int n,int candidateVotes[]){
    for(int i=0;i<n;i++){
        candidateVotes[votes[i]-1]++;
    }
}
int findWinder(int candidateVotes[]){
    int max_index=0;
    for(int i=1;i<5;i++){
        if(candidateVotes[i]>candidateVotes[max_index]){
            max_index=i;
        }
    }
    return max_index+1;
}
void readvotes(int votes[],int n){
    printf("Enter votes(candidate-1,candidate-2,candidate-3,candidate-4,candidate-5):");
    for(int i=0;i<n;i++){
        scanf("%d",&votes[i]);
    }
}
int main()
{   int n;
    printf("Enter number of votes:");
    scanf("%d",&n);
    int* votes = NULL;//no wild pointer //int votes[1000]
    votes = (int*)malloc(sizeof(int)*n);
    readvotes(votes,n);
    int* candidateVotes=(int*)calloc(5,sizeof(int));
    countVotes( votes, n, candidateVotes);
    for(int i=0;i<5;i++){
      printf("candiate %d votes are %d\n",i+1,candidateVotes[i]);
    }
    printf("Winner is %d",findWinder(candidateVotes));
    free(votes);//dangling pointer
    votes=NULL;//no dangling
    free(candidateVotes);
    candidateVotes=NULL;
    return 0;
}
